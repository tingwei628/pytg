name: build

on:
  push:
  pull_request:
    branches:
      - main
    paths:
      - 'src/**/*.py'
      - 'tests/**/*.py'
      - '*.py'
      - '!*.md'

jobs:
  package-pytg:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.8'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ matrix.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ matrix.os }}-poetry-

      - name: Add Poetry to $PATH
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.cache/pypoetry

      - name: Install dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'
      
      - name: Test
        run: |
          poetry run pytest --cov=./ --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

      - name: Build
        run: poetry build
         